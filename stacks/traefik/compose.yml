version: "3.8"

services:
  traefik:
    image: traefik:v2.11
    command:
      - --global.checknewversion=false
      - --api.dashboard=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker.swarmMode=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --certificatesresolvers.cf.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.cf.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.cf.acme.dnschallenge=true
      - --certificatesresolvers.cf.acme.dnschallenge.provider=cloudflare
    environment:
      CF_DNS_API_TOKEN: ${CF_API_TOKEN}
      CF_ZONE_ID: ${CF_ZONE_ID}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - edge
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        # Dashboard protegido em /dashboard (opcionalmente, exponha com auth depois)
        - traefik.http.routers.traefik.rule=PathPrefix(`/dashboard`) || PathPrefix(`/api`)
        - traefik.http.routers.traefik.entrypoints=websecure
        - traefik.http.routers.traefik.tls.certresolver=cf
        - traefik.http.services.traefik.loadbalancer.server.port=8080

volumes:
  traefik_letsencrypt:

networks:
  edge:
    external: true
    name: ${EDGE}
